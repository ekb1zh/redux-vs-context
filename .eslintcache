[{"/home/home/__private__/projects/redux-vs-context/src/index.tsx":"1","/home/home/__private__/projects/redux-vs-context/src/reportWebVitals.ts":"2","/home/home/__private__/projects/redux-vs-context/src/App.tsx":"3","/home/home/__private__/projects/redux-vs-context/src/components/ButtonsPanel.tsx":"4","/home/home/__private__/projects/redux-vs-context/src/components/ContextButton/index.tsx":"5","/home/home/__private__/projects/redux-vs-context/src/components/ReduxButton/index.tsx":"6","/home/home/__private__/projects/redux-vs-context/src/components/ContextButton/context/index.tsx":"7","/home/home/__private__/projects/redux-vs-context/src/components/ReduxButton/redux/index.tsx":"8","/home/home/__private__/projects/redux-vs-context/src/components/Button.tsx":"9"},{"size":502,"mtime":1611175235025,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611150297503,"results":"12","hashOfConfig":"11"},{"size":1617,"mtime":1611262154843,"results":"13","hashOfConfig":"11"},{"size":633,"mtime":1611262275574,"results":"14","hashOfConfig":"11"},{"size":542,"mtime":1611259416392,"results":"15","hashOfConfig":"11"},{"size":661,"mtime":1611259416392,"results":"16","hashOfConfig":"11"},{"size":543,"mtime":1611246761164,"results":"17","hashOfConfig":"11"},{"size":632,"mtime":1611246742172,"results":"18","hashOfConfig":"11"},{"size":200,"mtime":1611262254870,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1t1ic9t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/home/__private__/projects/redux-vs-context/src/index.tsx",[],["41","42"],"/home/home/__private__/projects/redux-vs-context/src/reportWebVitals.ts",[],"/home/home/__private__/projects/redux-vs-context/src/App.tsx",[],"/home/home/__private__/projects/redux-vs-context/src/components/ButtonsPanel.tsx",[],"/home/home/__private__/projects/redux-vs-context/src/components/ContextButton/index.tsx",["43"],"import { useContextState } from './context'\nimport Button from 'components/Button'\nimport { useEffect } from 'react'\n\ntype Props = {\n  name: string\n}\n\nconst ContextButton: React.FC<Props> = ({ name }) => {\n  console.log(name)\n\n  const { state, setState } = useContextState()\n\n  function increment() {\n    setState((prev) => ({\n      ...prev,\n      [name]: typeof prev[name] === 'number' ? prev[name] + 1 : 0,\n    }))\n  }\n\n  useEffect(increment, [])\n\n  return <Button onClick={increment}>{state[name]}</Button>\n}\n\nexport default ContextButton\n","/home/home/__private__/projects/redux-vs-context/src/components/ReduxButton/index.tsx",["44","45"],"import { useDispatch, useSelector } from 'react-redux'\nimport type { State, Action } from './redux'\nimport Button from 'components/Button'\nimport { useEffect } from 'react'\n\ntype Props = {\n  name: string\n}\n\nconst ReduxButton: React.FC<Props> = ({ name }) => {\n  console.log(name)\n\n  const value = useSelector((state: State) => state[name])\n  const dispatch = useDispatch()\n\n  function increment() {\n    dispatch({\n      type: 'SET',\n      payload: {\n        name: name,\n        value: typeof value === 'number' ? value + 1 : 0,\n      },\n    })\n  }\n\n  useEffect(increment, [])\n\n  return <Button onClick={increment}>{value}</Button>\n}\n\nexport default ReduxButton\n","/home/home/__private__/projects/redux-vs-context/src/components/ContextButton/context/index.tsx",[],"/home/home/__private__/projects/redux-vs-context/src/components/ReduxButton/redux/index.tsx",[],"/home/home/__private__/projects/redux-vs-context/src/components/Button.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":21,"column":24,"nodeType":"52","endLine":21,"endColumn":26,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":22,"nodeType":"56","messageId":"57","endLine":2,"endColumn":28},{"ruleId":"50","severity":1,"message":"58","line":26,"column":24,"nodeType":"52","endLine":26,"endColumn":26,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'setState'. Either include them or remove the dependency array.","ArrayExpression",["62"],"@typescript-eslint/no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'name', and 'value'. Either include them or remove the dependency array.",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [name, setState]",{"range":"68","text":"69"},"Update the dependencies array to be: [dispatch, name, value]",{"range":"70","text":"71"},[445,447],"[name, setState]",[572,574],"[dispatch, name, value]"]