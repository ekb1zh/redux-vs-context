[{"/home/home/__private__/projects/web/redux-vs-context/src/index.tsx":"1","/home/home/__private__/projects/web/redux-vs-context/src/reportWebVitals.ts":"2","/home/home/__private__/projects/web/redux-vs-context/src/App.tsx":"3","/home/home/__private__/projects/web/redux-vs-context/src/components/ButtonsPanel.tsx":"4","/home/home/__private__/projects/web/redux-vs-context/src/components/ContextButton/index.tsx":"5","/home/home/__private__/projects/web/redux-vs-context/src/components/ContextButton/context/index.tsx":"6","/home/home/__private__/projects/web/redux-vs-context/src/components/ReduxButton/index.tsx":"7","/home/home/__private__/projects/web/redux-vs-context/src/components/ReduxButton/redux/index.tsx":"8","/home/home/__private__/projects/web/redux-vs-context/src/components/Button.tsx":"9"},{"size":502,"mtime":1611175235025,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611150297503,"results":"12","hashOfConfig":"11"},{"size":1676,"mtime":1622814189882,"results":"13","hashOfConfig":"11"},{"size":783,"mtime":1622814392215,"results":"14","hashOfConfig":"11"},{"size":545,"mtime":1611313154824,"results":"15","hashOfConfig":"11"},{"size":546,"mtime":1611313163048,"results":"16","hashOfConfig":"11"},{"size":656,"mtime":1622813728096,"results":"17","hashOfConfig":"11"},{"size":632,"mtime":1611246742172,"results":"18","hashOfConfig":"11"},{"size":199,"mtime":1622814020948,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2c301j",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/home/__private__/projects/web/redux-vs-context/src/index.tsx",[],["41","42"],"/home/home/__private__/projects/web/redux-vs-context/src/reportWebVitals.ts",[],"/home/home/__private__/projects/web/redux-vs-context/src/App.tsx",[],"/home/home/__private__/projects/web/redux-vs-context/src/components/ButtonsPanel.tsx",[],"/home/home/__private__/projects/web/redux-vs-context/src/components/ContextButton/index.tsx",["43"],"import { useContextState } from './context'\nimport Button from 'components/Button'\nimport { useEffect } from 'react'\n\ntype Props = {\n  name: string\n}\n\nconst ContextButton: React.FC<Props> = ({ name }) => {\n  console.log(name)\n\n  const { state, setState } = useContextState()\n\n  const increment = () => {\n    setState((prev) => ({\n      ...prev,\n      [name]: typeof prev[name] === 'number' ? prev[name] + 1 : 0,\n    }))\n  }\n\n  useEffect(increment, [])\n\n  return <Button onClick={increment}>{state[name]}</Button>\n}\n\nexport default ContextButton\n","/home/home/__private__/projects/web/redux-vs-context/src/components/ContextButton/context/index.tsx",[],"/home/home/__private__/projects/web/redux-vs-context/src/components/ReduxButton/index.tsx",["44"],"import { useDispatch, useSelector } from 'react-redux'\nimport type { State } from './redux'\nimport Button from 'components/Button'\nimport { useEffect } from 'react'\n\ntype Props = {\n  name: string\n}\n\nconst ReduxButton: React.FC<Props> = ({ name }) => {\n  console.log(name)\n\n  const value = useSelector((state: State) => state[name])\n  const dispatch = useDispatch()\n\n  const increment = () => {\n    dispatch({\n      type: 'SET',\n      payload: {\n        name: name,\n        value: typeof value === 'number' ? value + 1 : 0,\n      },\n    })\n  }\n\n  useEffect(increment, [])\n\n  return <Button onClick={increment}>{value}</Button>\n}\n\nexport default ReduxButton\n","/home/home/__private__/projects/web/redux-vs-context/src/components/ReduxButton/redux/index.tsx",[],"/home/home/__private__/projects/web/redux-vs-context/src/components/Button.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":21,"column":24,"nodeType":"51","endLine":21,"endColumn":26,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":26,"column":24,"nodeType":"51","endLine":26,"endColumn":26,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'setState'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'dispatch', 'name', and 'value'. Either include them or remove the dependency array.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [name, setState]",{"range":"63","text":"64"},"Update the dependencies array to be: [dispatch, name, value]",{"range":"65","text":"66"},[448,450],"[name, setState]",[567,569],"[dispatch, name, value]"]